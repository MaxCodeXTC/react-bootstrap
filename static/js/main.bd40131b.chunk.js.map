{"version":3,"sources":["components/Home.js","components/About.js","components/News.js","components/CustomNavbar.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Grid","Jumbotron","Link","to","Button","bsStyle","Row","className","Col","xs","sm","Image","src","circle","Component","About","smOffset","rounded","News","CustomNavbar","Navbar","default","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","eventKey","componentClass","href","App","BrowserRouter","CustomNavbar_CustomNavbar","Route","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bd40131b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Jumbotron, Grid, Row, Col, Image, Button } from \"react-bootstrap\";\r\nimport \"./Home.css\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <Grid>\r\n        <Jumbotron>\r\n          <h2>Welcome to CodeLife</h2>\r\n          <p>\r\n            This is how to build a website with React, React-Router &\r\n            React-Bootstrap\r\n          </p>\r\n          <Link to=\"/about\">\r\n            <Button bsStyle=\"primary\">About</Button>\r\n          </Link>\r\n        </Jumbotron>\r\n        <Row className=\"show-grid text-center\">\r\n          <Col xs={12} sm={4} className=\"person-wrapper\">\r\n            <Image src=\"assets/person-1.jpg\" circle className=\"profile-pic\" />\r\n            <p>\r\n              Take your time. Speed will come later. Decide where your cloud\r\n              lives. Maybe he lives right in here. There we go{\" \"}\r\n            </p>\r\n          </Col>\r\n          <Col xs={12} sm={4} className=\"person-wrapper\">\r\n            <Image src=\"assets/person-2.jpg\" circle className=\"profile-pic\" />\r\n            <p>\r\n              Take your time. Speed will come later. Decide where your cloud\r\n              lives. Maybe he lives right in here. There we go{\" \"}\r\n            </p>\r\n          </Col>\r\n          <Col xs={12} sm={4} className=\"person-wrapper\">\r\n            <Image src=\"assets/person-3.jpg\" circle className=\"profile-pic\" />\r\n            <p>\r\n              Take your time. Speed will come later. Decide where your cloud\r\n              lives. Maybe he lives right in here. There we go{\" \"}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Col, Image } from \"react-bootstrap\";\r\nimport \"./About.css\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Image src=\"assets/dog-people.jpg\" className=\"header-image\" />\r\n        <Grid>\r\n          <Col xs={12} sm={8} smOffset={2}>\r\n            <Image\r\n              src=\"assets/person-1.jpg\"\r\n              className=\"about-profile-pic\"\r\n              rounded\r\n            />\r\n            <h3>Frank The Tank</h3>\r\n            <p>\r\n              It's life. It's interesting. It's fun. I will take some magic\r\n              white, and a little bit of Vandyke brown and a little touch of\r\n              yellow. See there, told you that would be easy. That easy. Talent\r\n              is a pursued interest. That is to say, anything you practice you\r\n              can do. We don't make mistakes we just have happy little\r\n              accidents.\r\n            </p>\r\n          </Col>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./News.css\";\r\nimport { Grid, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nexport default class News extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Image src=\"assets/mountain-man.jpg\" className=\"header-image\" />\r\n        <Grid>\r\n          <h2>News</h2>\r\n          <Row>\r\n            <Col xs={12} sm={8} className=\"main-section\">\r\n              <p>\r\n                But they're very easily killed. Clouds are delicate. Let's build\r\n                some happy little clouds up here. There comes a nice little\r\n                fluffer. We must be quiet, soft and gentle. Van Dyke Brown is a\r\n                very nice brown, it's almost like a chocolate brown. Just go\r\n                back and put one little more happy tree in there.\r\n              </p>\r\n              <p>\r\n                Every time you practice, you learn more. And I know you're\r\n                saying, 'Oh Bob, you've done it this time.' And you may be\r\n                right. Now it's beginning to make a little sense. Every\r\n                highlight needs it's own personal shadow. At home you have\r\n                unlimited time.\r\n              </p>\r\n            </Col>\r\n            <Col xs={12} sm={4} className=\"sidebar-section\">\r\n              <Image src=\"assets/dog-people.jpg\" />\r\n              <p>\r\n                Every time you practice, you learn more. And I know you're\r\n                saying, 'Oh Bob, you've done it this time.' And you may be\r\n                right.\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Nav, NavItem } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./CustomNavbar.css\";\r\n\r\nexport default class CustomNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar default collapseOnSelect>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <Link to=\"/\">CodeLife</Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <Nav pullRight>\r\n            <NavItem eventKey={1} componentClass={Link} href=\"/\" to=\"/\">\r\n              Home\r\n            </NavItem>\r\n            <NavItem\r\n              eventKey={2}\r\n              componentClass={Link}\r\n              href=\"/about\"\r\n              to=\"/about\"\r\n            >\r\n              About\r\n            </NavItem>\r\n            <NavItem eventKey={3} componentClass={Link} href=\"/news\" to=\"/news\">\r\n              News\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport News from \"./components/News\";\nimport CustomNavbar from \"./components/CustomNavbar\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <CustomNavbar />\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/about\" component={About} exact />\n          <Route path=\"/news\" component={News} exact />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}